{"version":3,"file":"stampit.mjs","sources":["../src/merge.js","../src/is-function.js","../src/is-object.js","../src/utils.js","../src/standardise-descriptor.js","../src/compose.js","../src/isStamp.js","../src/stampit.js"],"sourcesContent":["import {isArray, isObject, isPlainObject} from './utils';\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst\n * @param src\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) return dst;\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (isArray(src)) return (isArray(dst) ? dst : []).concat(src);\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) return src;\n\n  // See if 'dst' is allowed to be mutated. If not - it's overridden with a new plain object.\n  const returnValue = isObject(dst) ? dst : {};\n\n  const keys = Object.keys(src);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n\n    const srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      const dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      const newDst = isPlainObject(dstValue) || isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nexport default function (dst, ...srcs) {\n  return srcs.reduce(mergeOne, dst);\n}\n","export default function isFunction(obj) {\n  return typeof obj === 'function';\n}\n","export default function isObject(obj) {\n  const type = typeof obj;\n  return !!obj && (type === 'object' || type === 'function');\n}\n","import merge from './merge';\nimport isFunction from './is-function';\nimport isObject from './is-object';\n\nexport {isFunction};\nexport {isObject};\n\nexport const assign = Object.assign || function assign(to) {\n  const args = arguments;\n  for (let s = 1; s < args.length; s += 1) {\n    const from = args[s];\n    if (from) {\n      const keys = Object.keys(from);\n      for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n};\n\nexport const isArray = Array.isArray;\n\nexport function isPlainObject(value) {\n  return !!value && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n}\n\n\nconst concat = Array.prototype.concat;\nexport function extractFunctions() {\n  const fns = concat.apply([], arguments).filter(isFunction);\n  return fns.length === 0 ? undefined : fns;\n}\n\nexport function concatAssignFunctions(dstObject, srcArray, propName) {\n  if (!isArray(srcArray)) return;\n\n  const length = srcArray.length;\n  const dstArray = dstObject[propName] || [];\n  dstObject[propName] = dstArray;\n  for (let i = 0; i < length; i += 1) {\n    const fn = srcArray[i];\n    if (isFunction(fn) && dstArray.indexOf(fn) < 0) {\n      dstArray.push(fn);\n    }\n  }\n}\n\n\nfunction combineProperties(dstObject, srcObject, propName, action) {\n  if (!isObject(srcObject[propName])) return;\n  if (!isObject(dstObject[propName])) dstObject[propName] = {};\n  action(dstObject[propName], srcObject[propName]);\n}\n\nexport function deepMergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, merge);\n}\nexport function mergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, assign);\n}\n","import {assign, isObject, extractFunctions, concatAssignFunctions} from './utils';\nimport merge from './merge';\n\n/**\n * Converts stampit extended descriptor to a standard one.\n * @param [methods]\n * @param [properties]\n * @param [props]\n * @param [refs]\n * @param [initializers]\n * @param [init]\n * @param [deepProperties]\n * @param [deepProps]\n * @param [propertyDescriptors]\n * @param [staticProperties]\n * @param [statics]\n * @param [staticDeepProperties]\n * @param [deepStatics]\n * @param [staticPropertyDescriptors]\n * @param [configuration]\n * @param [conf]\n * @param [deepConfiguration]\n * @param [deepConf]\n * @param [composers]\n * @returns {Descriptor}\n */\nexport default function ({\n  methods,\n\n  properties,\n  props,\n  refs,\n\n  initializers,\n  init,\n\n  composers,\n\n  deepProperties,\n  deepProps,\n\n  propertyDescriptors,\n\n  staticProperties,\n  statics,\n\n  staticDeepProperties,\n  deepStatics,\n\n  staticPropertyDescriptors,\n\n  configuration,\n  conf,\n\n  deepConfiguration,\n  deepConf\n} = {}) {\n  const p = isObject(props) || isObject(refs) || isObject(properties) ?\n    assign({}, props, refs, properties) : undefined;\n\n  let dp = isObject(deepProps) ? merge({}, deepProps) : undefined;\n  dp = isObject(deepProperties) ? merge(dp, deepProperties) : dp;\n\n  const sp = isObject(statics) || isObject(staticProperties) ?\n    assign({}, statics, staticProperties) : undefined;\n\n  let dsp = isObject(deepStatics) ? merge({}, deepStatics) : undefined;\n  dsp = isObject(staticDeepProperties) ? merge(dsp, staticDeepProperties) : dsp;\n\n  const c = isObject(conf) || isObject(configuration) ?\n    assign({}, conf, configuration) : undefined;\n\n  let dc = isObject(deepConf) ? merge({}, deepConf) : undefined;\n  dc = isObject(deepConfiguration) ? merge(dc, deepConfiguration) : dc;\n\n  const ii = extractFunctions(init, initializers);\n\n  const composerFunctions = extractFunctions(composers);\n  if (composerFunctions) {\n    dc = dc || {};\n    concatAssignFunctions(dc, composerFunctions, 'composers');\n  }\n\n  const descriptor = {};\n  if (methods) descriptor.methods = methods;\n  if (p) descriptor.properties = p;\n  if (ii) descriptor.initializers = ii;\n  if (dp) descriptor.deepProperties = dp;\n  if (sp) descriptor.staticProperties = sp;\n  if (methods) descriptor.methods = methods;\n  if (dsp) descriptor.staticDeepProperties = dsp;\n  if (propertyDescriptors) descriptor.propertyDescriptors = propertyDescriptors;\n  if (staticPropertyDescriptors) descriptor.staticPropertyDescriptors = staticPropertyDescriptors;\n  if (c) descriptor.configuration = c;\n  if (dc) descriptor.deepConfiguration = dc;\n\n  return descriptor;\n}\n","import isComposable from './isComposable';\nimport merge from './merge';\nimport {isFunction, isObject, assign, concatAssignFunctions, mergeAssign, deepMergeAssign} from './utils';\n\n/**\n * Creates new factory instance.\n * @param {Descriptor} descriptor The information about the object the factory will be creating.\n * @returns {Function} The new factory function.\n */\nfunction createFactory(descriptor) {\n  return function Stamp(options, ...args) {\n    // Next line was optimized for most JS VMs. Please, be careful here!\n    let obj = Object.create(descriptor.methods || null);\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) return obj;\n\n    if (options === undefined) options = {};\n    const inits = descriptor.initializers;\n    const length = inits.length;\n    for (let i = 0; i < length; i += 1) {\n      const initializer = inits[i];\n      if (isFunction(initializer)) {\n        const returnedValue = initializer.call(obj, options,\n          {instance: obj, stamp: Stamp, args: [options].concat(args)});\n        obj = returnedValue === undefined ? obj : returnedValue;\n      }\n    }\n\n    return obj;\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {Descriptor} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Compose} composeFunction The \"compose\" function implementation.\n * @returns {Stamp}\n */\nfunction createStamp(descriptor, composeFunction) {\n  const Stamp = createFactory(descriptor);\n\n  merge(Stamp, descriptor.staticDeepProperties);\n  assign(Stamp, descriptor.staticProperties);\n  Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors || {});\n\n  const composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose(...args) {\n    return composeImplementation.apply(this, args);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {Descriptor} dstDescriptor The descriptor object to merge into.\n * @param {Composable} [srcComposable] The composable\n * (either descriptor or stamp) to merge data form.\n * @returns {Descriptor} Returns the dstDescriptor argument.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  const srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n  if (!isComposable(srcDescriptor)) return dstDescriptor;\n\n  mergeAssign(dstDescriptor, srcDescriptor, 'methods');\n  mergeAssign(dstDescriptor, srcDescriptor, 'properties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'propertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticProperties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'staticDeepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticPropertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'configuration');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepConfiguration');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.initializers, 'initializers');\n\n  return dstDescriptor;\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @typedef {Function} Compose\n * @param {...(Composable)} [composables] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nexport default function compose(...composables) {\n  const descriptor = [this]\n    .concat(composables)\n    .filter(isObject)\n    .reduce(mergeComposable, {});\n  return createStamp(descriptor, compose);\n}\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n\n/**\n * A composable object - stamp or descriptor\n * @typedef {Stamp|Descriptor} Composable\n */\n\n","import isFunction from './is-function';\n\n/**\n * Returns true if argument is a stamp.\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isStamp(obj) {\n  return isFunction(obj) && isFunction(obj.compose);\n}\n","import standardiseDescriptor from './standardise-descriptor';\nimport {isArray, isFunction, assign, extractFunctions} from './utils';\nimport merge from './merge';\nimport compose from './compose';\nimport isComposable from './isComposable';\nimport isStamp from './isStamp';\n\nfunction createUtilityFunction(propName, action) {\n  return function composeUtil() {\n    return ((this && this.compose) || stampit).call(this, {\n      [propName]: action({}, ...arguments)\n    });\n  };\n}\n\nexport const methods = createUtilityFunction('methods', assign);\n\nexport const properties = createUtilityFunction('properties', assign);\nexport {properties as refs};\nexport {properties as props};\n\nexport function initializers(...args) {\n  return ((this && this.compose) || stampit).call(this, {\n    initializers: extractFunctions(...args)\n  });\n}\nexport {initializers as init};\n\nexport function composers(...args) {\n  return ((this && this.compose) || stampit).call(this, {\n    composers: extractFunctions(...args)\n  });\n}\n\nexport const deepProperties = createUtilityFunction('deepProperties', merge);\nexport {deepProperties as deepProps};\n\nexport const staticProperties = createUtilityFunction('staticProperties', assign);\nexport {staticProperties as statics};\n\nexport const staticDeepProperties = createUtilityFunction('staticDeepProperties', merge);\nexport {staticDeepProperties as deepStatics};\n\nexport const configuration = createUtilityFunction('configuration', assign);\nexport {configuration as conf};\n\nexport const deepConfiguration = createUtilityFunction('deepConfiguration', merge);\nexport {deepConfiguration as deepConf};\n\nexport const propertyDescriptors = createUtilityFunction('propertyDescriptors', assign);\n\nexport const staticPropertyDescriptors = createUtilityFunction('staticPropertyDescriptors', assign);\n\nconst allUtilities = {\n  methods,\n\n  properties,\n  refs: properties,\n  props: properties,\n\n  initializers,\n  init: initializers,\n\n  composers,\n\n  deepProperties,\n  deepProps: deepProperties,\n\n  staticProperties,\n  statics: staticProperties,\n\n  staticDeepProperties,\n  deepStatics: staticDeepProperties,\n\n  configuration,\n  conf: configuration,\n\n  deepConfiguration,\n  deepConf: deepConfiguration,\n\n  propertyDescriptors,\n\n  staticPropertyDescriptors\n};\n\n/**\n * Infected stamp. Used as a storage of the infection metadata\n * @type {Function}\n * @return {Stamp}\n */\nconst baseStampit = compose(\n  {staticProperties: allUtilities},\n  {\n    staticProperties: {\n      create(...args) {\n        return this(...args);\n      },\n      compose: stampit // infecting\n    }\n  }\n);\n\n/**\n * Infected compose\n * @param {...(Composable)} [args] The list of composables.\n * @return {Stamp}\n */\nfunction stampit(...args) {\n  const composables = args.filter(isComposable)\n    .map(arg => isStamp(arg) ? arg : standardiseDescriptor(arg));\n\n  // Calling the standard pure compose function here.\n  let stamp = compose.apply(this || baseStampit, composables);\n\n  const composerFunctions = stamp.compose.deepConfiguration &&\n    stamp.compose.deepConfiguration.composers;\n  if (isArray(composerFunctions) && composerFunctions.length > 0) {\n    const uniqueComposers = [];\n    for (let i = 0; i < composerFunctions.length; i += 1) {\n      const composer = composerFunctions[i];\n      if (isFunction(composer) && uniqueComposers.indexOf(composer) < 0) {\n        uniqueComposers.push(composer);\n      }\n    }\n    stamp.compose.deepConfiguration.composers = uniqueComposers;\n\n    if (isStamp(this)) composables.unshift(this);\n    for (let i = 0; i < uniqueComposers.length; i += 1) {\n      const composer = uniqueComposers[i];\n      const returnedValue = composer({stamp, composables});\n      stamp = isStamp(returnedValue) ? returnedValue : stamp;\n    }\n  }\n\n  return stamp;\n}\n\nconst exportedCompose = stampit.bind(); // bind to 'undefined'\nexport {exportedCompose as compose};\nstampit.compose = exportedCompose;\n\n// Setting up the shortcut functions\nexport default assign(stampit, allUtilities);\n"],"names":["const","let","isComposable","i","composer"],"mappings":"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"}